{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","useState","alert","setAlert","bcg","join","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,I,OC0BvDC,EA7BK,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,MAEjC,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAMN,EAAIO,KAAK,KACff,EAAMG,EAAQ,WAAR,cAAYK,IAWxB,OATAQ,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBL,GAAS,KAER,KAEH,OAAO,kBAAMM,aAAaF,MAC1B,CAACL,IAEI,0BACLQ,UAAS,gBAAWV,EAAQ,IAAM,eAClCW,MAAO,CAACC,gBAAgB,OAAD,OAAQR,EAAR,MACvBS,QAAS,WACPV,GAAS,GACTW,UAAUC,UAAUC,UAAU1B,IAL3B,UAQL,oBAAGoB,UAAU,gBAAb,UAA8BX,EAA9B,OACA,mBAAGW,UAAU,cAAb,SAA4BpB,IAC3BY,GAAS,mBAAGQ,UAAU,QAAb,qC,gBCmBCO,MA1Cf,WAEE,MAA0BhB,mBAAS,IAAnC,mBAAOiB,EAAP,KAAcC,EAAd,KACA,EAA0BlB,mBAAS,IAAnC,mBAAOmB,EAAP,KAAcC,EAAd,KACA,EAAwBpB,mBAAS,IAAIqB,IAAO,WAAWC,IAAI,KAA3D,mBAAOC,EAAP,KAAaC,EAAb,KAcA,OACE,qCACE,0BAASf,UAAU,YAAnB,UACE,iDACA,uBAAMgB,SAhBS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACRC,QAAQC,IAAIF,GACb,MAAMT,GACLC,GAAS,GACTS,QAAQC,IAAIX,KAQV,UACE,uBAAOY,KAAK,OAAOC,MAAOf,EAAOgB,SAAU,SAACP,GAAD,OAAOR,EAASQ,EAAEQ,OAAOF,QACpEG,YAAY,UACZ1B,UAAS,UAAKU,EAAM,QAAS,QAC7B,wBAAQV,UAAU,MAAMsB,KAAK,SAA7B,4BAGJ,yBAAStB,UAAU,SAAnB,SAEIc,EAAKa,KAAI,SAACnB,EAAOlB,GACf,OACE,cAAC,EAAD,2BAA6BkB,GAA7B,IAAoClB,MAAOA,IAAzBA,YCjChCsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b643e141.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from 'react'\nimport rgbToHex from './utils'\n\nconst SingleColor = ({rgb, weight, index}) => {\n\n  const [alert, setAlert] = useState(false);\n  const bcg = rgb.join(',');\n  const hex = rgbToHex(...rgb)\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setAlert(false);\n\n    }, 1000)\n\n    return () => clearTimeout(timeout);\n  },[alert])\n\n  return <article \n    className={`color ${index > 10 && 'color-light'}`} \n    style={{backgroundColor:`rgb(${bcg})`}}\n    onClick={()=>{\n      setAlert(true);\n      navigator.clipboard.writeText(hex);\n    }}\n  >\n    <p className=\"percent-value\">{weight}%</p>\n    <p className=\"color-value\">{hex}</p>\n    {alert && <p className=\"alert\">copied to clipboard</p>}\n  </article>\n}\n\nexport default SingleColor\n","import React, { useState } from 'react'\nimport SingleColor from './SingleColor'\n\nimport Values from 'values.js'\n\nfunction App() {\n\n  const [color, setColor] = useState('');\n  const [error, setError] = useState('');\n  const [list, setList] = useState(new Values('#ff1515').all(10));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try{\n      let colors = new Values(color).all(10);\n      setList(colors);\n      console.log(colors);\n    }catch(error){\n      setError(true)\n      console.log(error)\n    }\n  }\n\n  return (\n    <>\n      <section className=\"container\">\n        <h3>color generator</h3>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={color} onChange={(e) => setColor(e.target.value)}\n          placeholder=\"#f15025\"\n          className={`${error?'error': null}`}/>\n          <button className=\"btn\" type=\"submit\">generate</button>\n        </form>\n      </section>\n      <section className=\"colors\">\n        {\n          list.map((color, index) => {\n            return (\n              <SingleColor key={index} {...color} index={index}/>\n            );\n          })\n        }\n      </section>\n    </>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}